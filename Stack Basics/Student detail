#include <iostream>
#include <string>
using namespace std;
class Student {
public:
    string name;
    int id;
    double grade;

    // ructor to initialize student details
    Student(string studentName, int studentId, double studentGrade) {
        name = studentName;
        id = studentId;
        grade = studentGrade;
    }

    // Print method to display student details
    void print()  {
        cout << "Student Name: " << name
             << ", ID: " << id
             << ", Grade: " << grade << endl;
    }
};

// Define the Node class for the linked list
class Node {
public:
    Student data;
    Node* next;

    // ructor to initialize node
    Node( Student& student) : data(student), next(NULL) {}
};

// Define the Stack class using linked list
class Stack {
private:
    Node* top;  // Pointer to the top of the stack

public:
    // ructor to initialize stack
    Stack() : top(NULL) {}

 9

    // Push operation to add a student to the stack
    void push( Student& student) {
        Node* newNode = new Node(student);
        newNode->next = top;
        top = newNode;
    }

    // Pop operation to remove a student from the stack
    void pop() {
        if (top == NULL) {
            cout << "Stack underflow. Cannot pop student." << endl;
            return;
        }
        Node* temp = top;
        top = top->next;
        delete temp;
    }

    // Peek operation to view the top student without removing
    Student peek()  {
        if (top == NULL) {
            cout << "Stack is empty. Cannot peek." << endl;
            return Student("", -1, 0.0);
        }
        return top->data;
    }

    // Print the stack contents
    void print()  {
        if (top == NULL) {
            cout << "Stack is empty." << endl;
            return;
        }
        Node* current = top;
        while (current != NULL) {
            current->data.print();
            current = current->next;
        }
    }
};

int main() {
    Stack studentStack;

    int numberOfStudents;
    cout << "Enter the number of students to push onto the stack: ";
    cin >> numberOfStudents;

    for (int i = 0; i < numberOfStudents; ++i) {
        string name;
        int id;
        double grade;

        cout << "Enter details for student " << i + 1 << ":" << endl;
        cout << "Name: ";
        cin >> name;
        cout << "ID: ";
        cin >> id;
        cout << "Grade: ";
        cin >> grade;

        Student student(name, id, grade);
        studentStack.push(student);
    }

    cout << "\nStack contents after pushes:" << endl;
    studentStack.print();

    studentStack.pop();
    cout << "\nStack contents after pop:" << endl;
    studentStack.print();

    cout << "\nPeek at top student:" << endl;
    Student topStudent = studentStack.peek();
    topStudent.print();

    return 0;
}
