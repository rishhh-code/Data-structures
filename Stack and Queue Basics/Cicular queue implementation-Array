#include <iostream>
#define SIZE 5
using namespace std;
class CircularQueue {
int items[SIZE], front, rear;
public:
CircularQueue() {
front = -1;
rear = -1; }
bool isFull() {
return (front == 0 && rear == SIZE - 1) || (front == rear + 1);  }
bool isEmpty() {
return front == -1;}
void enqueue(int element) {
if (isFull()) {
cout << "Queue is full\n";
} else{if (front == -1) front = 0;
rear = (rear + 1) % SIZE;
items[rear] = element;;}  } int dequeue() {
int element;
if (isEmpty()) {
cout << "Queue is empty\n";
return -1;} else {
element = items[front];
if (front == rear) {front = -1; rear = -1;} else {
front = (front + 1) % SIZE; }
cout << "Deleted " << element << endl;return element;}}

void display() {
if (isEmpty()) {
cout << "Queue is empty\n";} 
else { 
cout << "Front -> " << front << endl;
cout << "Items -> ";
for (int i = front; i != rear; i = (i + 1) % SIZE)
cout << items[rear] << endl;cout << "Rear -> " << rear << endl; }}};
int main() {
CircularQueue q; q.enqueue(1);
q.enqueue(2);q.enqueue(3);
q.enqueue(4);q.enqueue(5);
q.dequeue(); q.enqueue(6);
return 0;}
