#include <iostream>
using namespace std;
class Node {
public:
    int data;
    Node* next;
};
class Queue {
    Node* front;
    Node* rear;
public:
    Queue() {
        front = rear = nullptr; }
    bool isEmpty() {
        return front == nullptr; }
    void enqueue(int value) {
        Node* temp = new Node();
        temp->data = value;
        temp->next = nullptr;
        if (rear == nullptr) {
            front = rear = temp;
        } else {
            rear->next = temp;
            rear = temp;
        }
        cout << "Enqueued " << value << endl;
    }

    void dequeue() {
        if (isEmpty()) {
            cout << "Queue is empty\n";
            return; } else {
            Node* temp = front;
            front = front->next;
            if (front == nullptr) rear = nullptr;
            cout << "Dequeued " << temp->data << endl;
            delete temp; }  }
    void display() {
        if (isEmpty()) {
            cout << "Queue is empty\n";
            return;
        }
        Node* temp = front;
        while (temp != nullptr) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
 }
};
int main() {
    Queue q;
    q.enqueue(10);
    q.enqueue(20);
    q.enqueue(30);
    q.dequeue();
    q.display();
    return 0;
}
