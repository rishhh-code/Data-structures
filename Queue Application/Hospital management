#include <iostream>
#include <string>
using namespace std;
class Patient {
public:
string name; int severity; int arrival;
Patient(string n, int s, int a) {
name = n; = s;  arrival = a; }};
class Node {
public:
Patient* patient;
Node* next;
Node(Patient* p) {
patient = p;
next = NULL; }};
class PriorityQueue {
private:
Node* head;
int time;
public:
PriorityQueue() {
head = NULL;
time = 0;}
void addPatient(string name, int severity) {
Patient* newPatient = new Patient(name, severity, time++);
Node* newNode = new Node(newPatient);
if (head == NULL || newPatient->severity > head->patient->severity) {
newNode->next = head;
head = newNode;
} else { Node* current = head;
while (current->next && current->next->patient->severity >= newPatient->severity) { 
if (current->next->patient->severity == newPatient->severity && current->next->patient->arrival > newPatient->arrival)
break;
current = current->next; }
newNode->next = current->next;
current->next = newNode; }}
void treatPatient() {
if (head == NULL) {
cout << "No patients to treat.\n";
return;}
Node* temp = head;
head = head->next;
cout << "Treating: " << temp->patient->name << " (Severity: " << temp->patient->severity << ")\n";
delete temp->patient;
delete temp;}
void printQueue() {
Node* current = head;
while (current != NULL) {
cout << current->patient->name << " (Severity: " << current->patient->severity << ", Arrival: " << current->patient->arrival << ")\n";
current = current->next; }}};
int main() {
PriorityQueue pq;  int n;
cout << "Enter number of patients: ";cin >> n;
for (int i = 0; i < n; i++) {
string name; int severity;
cout << "Enter name for patient " << i + 1 << ": "; 
cin >> name;
cout << "Enter severity level (1-5) for patient " << i + 1 << ": "; 
cin >> severity;
pq.addPatient(name, severity); }cout << "Queue before treatment:\n";
pq.printQueue();
cout << "\nTreating patients:\n";
for (int i = 0; i < n; i++) {
pq.treatPatient();
}
 return 0;
 }
